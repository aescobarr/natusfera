var Polymaps={boundPoint:function(bounds,coordinate){var x=coordinate[0],y=coordinate[1];x<bounds[0].lon&&(bounds[0].lon=x),x>bounds[1].lon&&(bounds[1].lon=x),y<bounds[0].lat&&(bounds[0].lat=y),y>bounds[1].lat&&(bounds[1].lat=y)},boundPoints:function(bounds,coordinates){for(var i=-1,n=coordinates.length;++i<n;)Polymaps.boundPoint(bounds,coordinates[i])},boundMultiPoints:function(bounds,coordinates){for(var i=-1,n=coordinates.length;++i<n;)Polymaps.boundPoints(bounds,coordinates[i])}};Polymaps.boundGeometry={Point:Polymaps.boundPoint,MultiPoint:Polymaps.boundPoints,LineString:Polymaps.boundPoints,MultiLineString:Polymaps.boundMultiPoints,Polygon:function(bounds,coordinates){Polymaps.boundPoints(bounds,coordinates[0])},MultiPolygon:function(bounds,coordinates){for(var i=-1,n=coordinates.length;++i<n;)Polymaps.boundPoints(bounds,coordinates[i][0])}},Polymaps.bounds=function(features){for(var geometry,i=-1,n=features.length,bounds=[{lon:1/0,lat:1/0},{lon:-1/0,lat:-1/0}];++i<n;)geometry=features[i].data.geometry,Polymaps.boundGeometry[geometry.type](bounds,geometry.coordinates);return bounds},Polymaps.bingUrlTemplate=function(url,subdomains){function quad(column,row,zoom){for(var key="",i=1;zoom>=i;i++)key+=(1&row>>zoom-i)<<1|1&column>>zoom-i;return key}var n=subdomains.length,salt=~~(Math.random()*n);return function(c){var quadKey=quad(c.column,c.row,c.zoom),server=Math.abs(salt+c.column+c.row+c.zoom)%n;return url.replace("{quadkey}",quadKey).replace("{subdomain}",subdomains[server])}};