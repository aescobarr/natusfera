$.fn.observationFieldsForm=function(){$(this).each(function(){var that=this;$(".observation_field_chooser",this).chooser({collectionUrl:"/observation_fields.json",resourceUrl:"/observation_fields/{{id}}.json",afterSelect:function(){$(".observation_field_chooser",that).parents(".ui-chooser:first").next(".button").click(),$(".observation_field_chooser",that).chooser("clear")}}),$(".addfieldbutton",this).hide(),$("#createfieldbutton",this).click(ObservationFields.newObservationFieldButtonHandler),ObservationFields.fieldify({focus:!1})})},$.fn.newObservationField=function(markup){var currentField=$(".observation_field_chooser",this).chooser("selected");return currentField&&"undefined"!=typeof currentField?$("#observation_field_"+currentField.recordId,this).length>0?(alert("You already have a field for that type"),void 0):($(".observation_fields",this).append(markup),ObservationFields.fieldify({observationField:currentField}),void 0):(alert("Please choose a field type"),void 0)};var ObservationFields={newObservationFieldButtonHandler:function(){var url=$(this).attr("href"),dialog=$('<div class="dialog"><span class="loading status">Loading...</span></div>');return $(document.body).append(dialog),$(dialog).dialog({modal:!0,title:I18n.translations[I18n.currentLocale()].new_observation_field}),$(dialog).load(url,"format=js",function(){$("form",dialog).submit(function(){return $.ajax({type:"post",url:$(this).attr("action"),data:$(this).serialize(),dataType:"json"}).done(function(data){$(dialog).dialog("close"),$(".observation_field_chooser").chooser("selectItem",data)}).fail(function(xhr){var json=$.parseJSON(xhr.responseText);json&&json.errors&&json.errors.length>0?alert(json.errors.join("")):alert(I18n.t("doh_something_went_wrong"))}),!1}),$(this).centerDialog()}),!1},fieldify:function(options){options=options||{},options.focus="undefined"==typeof options.focus?!0:options.focus,$(".observation_field").not(".fieldified").each(function(){var lastName=$(this).siblings(".fieldified:last").find("input").attr("name");if(lastName){var matches=lastName.match(/observation_field_values_attributes\]\[(\d*)\]/);if(matches)var index=parseInt(matches[1])+1;else var index=0}else var index=0;$(this).addClass("fieldified");var input=$(".ofv_input input.text",this),currentField=options.observationField||$.parseJSON($(input).attr("data-json"));if(currentField)if(currentField.recordId=currentField.recordId||currentField.id,$(this).attr("id","observation_field_"+currentField.recordId),$(this).attr("data-observation-field-id",currentField.recordId),$(".labeldesc label",this).html(currentField.name),$(".description",this).html(currentField.description),$(".observation_field_id",this).val(currentField.recordId),$("input",this).each(function(){var newName=$(this).attr("name").replace(/observation_field_values_attributes\]\[(\d*)\]/,"observation_field_values_attributes]["+index+"]");$(this).attr("name",newName)}),currentField.allowed_values&&""!=currentField.allowed_values){for(var allowed_values=currentField.allowed_values.split("|"),select=$("<select></select>"),i=0;i<allowed_values.length;i++)select.append($("<option>"+allowed_values[i]+"</option>"));select.change(function(){input.val($(this).val())}),$(input).hide(),$(input).after(select),select.val(input.val()).change(),options.focus&&select.focus()}else if("numeric"==currentField.datatype){var newInput=input.clone();newInput.attr("type","number"),newInput.attr("step","any"),input.after(newInput),input.remove(),options.focus&&newInput.focus()}else if("date"==currentField.datatype)$(input).iNatDatepicker({constrainInput:!0}),options.focus&&input.focus();else if("time"==currentField.datatype)$(input).timepicker({}),options.focus&&input.focus();else if("taxon"==currentField.datatype){var newInput=input.clone();newInput.attr("name","taxon_name"),input.after(newInput),input.hide(),$(newInput).removeClass("ofv_value_field"),$(newInput).simpleTaxonSelector({taxonIDField:input})}else options.focus&&input.focus()})},showObservationFieldsDialog:function(options){options=options||{};var url=options.url||"/observations/"+window.observation.id+"/fields",title=options.title||I18n.t("observation_fields"),originalInput=options.originalInput,dialog=$("#obsfielddialog");0==dialog.length&&(dialog=$('<div id="obsfielddialog"></div>').addClass("dialog").html('<div class="loading status">Loading...</div>')),dialog.load(url,function(){var diag=this;if($(this).observationFieldsForm(),$(this).centerDialog(),$("form:has(input[required])",this).submit(checkFormForRequiredFields),originalInput){var form=$("form",this);$(form).submit(function(){var ajaxOptions={url:$(form).attr("action"),type:$(form).attr("method"),data:$(form).serialize(),dataType:"json"};return $.ajax(ajaxOptions).done(function(){$.rails.fire($(originalInput),"ajax:success"),$(diag).dialog("close")}).fail(function(){alert("Failed to add to project")}),!1})}}),dialog.dialog({modal:!0,title:title,width:600,maxHeight:.8*$(window).height()})}};$(document).ready(function(){$("#project_menu .addlink, .project_invitation .acceptlink").bind("ajax:success",function(e,json){var observationId=json&&json.observation_id||$(this).data("observation-id")||window.observation.id;if(json&&json.project&&json.project.project_observation_fields&&json.project.project_observation_fields.length>0){if(json.observation.observation_field_values&&json.observation.observation_field_values.length>0){var ofvs=json.observation.observation_field_values,pofs=json.project.project_observation_fields,ofv_of_ids=$.map(ofvs,function(ofv){return ofv.observation_field_id}),pof_of_ids=$.map(pofs,function(pof){return pof.observation_field_id}),intersection=$.map(ofv_of_ids,function(a){return $.inArray(a,pof_of_ids)<0?null:a});if(intersection.length>=pof_of_ids.length)return!0}ObservationFields.showObservationFieldsDialog({url:"/observations/"+observationId+"/fields?project_id="+json.project_id,title:"Project observation fields for "+json.project.title,originalInput:this})}}).bind("ajax:error",function(e,xhr){var json=$.parseJSON(xhr.responseText),projectId=json.project_observation.project_id||$(this).data("project-id"),observationId=json.project_observation.observation_id||$(this).data("observation-id")||window.observation.id;json.error.match(/observation field/)?ObservationFields.showObservationFieldsDialog({url:"/observations/"+observationId+"/fields?project_id="+projectId,title:"Project observation fields",originalInput:this}):json.error.match(/must belong to a member/)?showJoinProjectDialog(projectId,{originalInput:this}):alert(json.error)}),$("#project_menu .removelink, .project_invitation .removelink").bind("ajax:error",function(e,xhr){alert(xhr.responseText)})});