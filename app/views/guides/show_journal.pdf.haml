- content_for :extracss do
  :css
    .guide_taxon_header, .page {page-break-inside: avoid;}
    #attribution {page-break-inside: avoid;}
    #attribution ul {list-style:none;}
    .guide_taxon {page-break-after: always; height: 700px; overflow:hidden;position:relative;}
    #abstract {padding: 0 20%;}
    .span6 #title, .span6 #abstract {display: table-cell; vertical-align: middle; height: 700px; overflow:hidden; padding:0;}
    .guide_taxon:after{
      content:' ';
      display:block;
      position: absolute;
      bottom:0;
      left:0;
      width:100%;
      height:2em;
      background: -webkit-gradient(linear, 50% 0%, 50% 100%, from(rgba(255, 255, 255, 0)), to(white));
      background: -moz-linear-gradient(bottom, rgba(255, 255, 255, 0), red);
    }
    .guide_photos img {display:inline-block; margin: 0 0.5em 0.5em 0;}
    .guide_sections {text-align:justify;}
    .table th {width:auto; text-transform: capitalize;}
    .table td {width:50%;}
    .bootstrap ul.guide_photos, .bootstrap .thumbnails > li { margin-bottom: 0;}
    .guide_range {margin-left: 1em;}
    .journal {border-left: 1px dashed #ccc;padding-left:2em; height:100%; position:relative; height:650px;}
    .notes, .drawings {position:relative;}
    .journal h3 {
      text-transform: uppercase; 
      -webkit-transform-origin: 0% 50%; 
      -webkit-transform: rotate(-90deg); 
      font-size: 9pt; 
      position: absolute; 
      left: -1.1em; 
      top: 50%; 
      line-height: 1;
    }
    .bootstrap h2 {margin: 0;}
    .bootstrap h3 {line-height: 1em; font-size:130%;}
    .bootstrap p {font-size:90%;}
    h2 {line-height: 1;}
    @media print{@page {size: landscape}}
.container-fluid
  #titlepage.page
    - title_and_image = capture do
      #title.text-center
        - if @guide.icon.file?
          = image_tag @guide.icon.url(:medium)
        %h1= @guide.title
        %p.muted
          =t :guide_compiled_by
          - if @guide.license.blank?
            = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
          - else
            = succeed ',' do
              = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
            =t 'copyright.some_rights_reserved'
            = surround '(', ')' do
              = @guide.license.sub('-', ' ')
    - abstract = capture do
      #abstract
        = formatted_user_text @guide.description
    - if @guide.description.blank? || @guide.description.length < 200
      = title_and_image
      - unless @guide.description.blank?
        = abstract
    - else
      .row-fluid
        .span6= title_and_image
        .span6= abstract
  - num_guide_taxa = @guide_taxa.size
  - @guide_taxa.each_with_index do |gt, i|
    .guide_taxon
      .row-fluid
        .span12.muted.meta
          = @guide.title
          &mdash;
          =t :journal
          &mdash;
          =t :guide_compiled_by
          - if @guide.license.blank?
            = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
          - else
            = succeed ',' do
              = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
            =t 'copyright.some_rights_reserved'
            = surround '(', ')' do
              = @guide.license
          %span.pull-right
            = "#{i+1}/#{num_guide_taxa}"
      .row-fluid
        .span6
          .stacked
            - if gt.display_name == gt.name
              %h2
                %em= gt.display_name
            - else
              %h2= gt.display_name
              %em.muted= gt.name
          - unless gt.guide_photos.blank?
            .row-fluid.stacked
              %ul.thumbnails.guide_photos.stacked
                - for gp in gt.guide_photos.sort_by(&:position)[0..2]
                  %li.span4
                    = image_tag(gp.small_url, :class => "borderless thumbnail")
              %p.attribution
                %small.muted.meta
                  = gt.guide_photos.size == 1 ? t(:photo) : t(:photos)
                  = gt.guide_photos.sort_by(&:position)[0..2].map(&:attribution).uniq.join(', ')
          - if gr = gt.guide_ranges.sort_by(&:position).first
            .stacked.pull-right.span4.guide_range.text-center
              = image_tag gr.medium_url, :class => "stacked"
              %p.attribution
                %small.muted.meta
                  =t :map
                  = gr.attribution
          .guide_sections
            - for s in gt.guide_sections.sort_by(&:position)
              .guide_section
                %h3
                  = s.title
                  = cite do
                    = s.attribution
                    = link_to(s.source_url, s.source_url) unless s.source_url.blank?
                = formatted_user_text s.description
        .span6
          .journal
            %table.table.table-bordered
              %tr
                %th=t :name
                %td{:colspan => 3}
              %tr
                %th=t :location
                %td &nbsp;
                %th=t :date_
                %td &nbsp;
              %tr
                %th=t :weather
                %td &nbsp;
                %th=t :time_
                %td &nbsp;
            .notes
              %h3=t :notes
              - 10.times do
                %hr
            .drawings
              %h3=t :drawings
              - 14.times do
                %br
  #attribution
    %h3=t :sources_and_credits
    = references(:linked => true)
    %p
      - if @guide.license.blank?
        =t :compiled_by_name, :name => @guide.user.name.blank? ? @guide.user.login : @guide.user.name
      - else
        = succeed ',' do
          =t :compiled_by_name, :name => @guide.user.name.blank? ? @guide.user.login : @guide.user.name
        =t 'copyright.some_rights_reserved'
        = surround '(', ')' do
          = link_to @guide.license.sub('-', ' '), url_for_license(@guide.license)
    %p
      =t :built_with_site_guides_html, :site_name => SITE_NAME, :url => guides_url
