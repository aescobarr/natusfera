- content_for :extracss do
  :css
    .guide_taxon_header, .page {page-break-inside: avoid;}
    .guide_photos img {max-height:200px;}
    #title h1 {margin-top:1em;}
    #title img {max-width:50%;}
    #abstract {margin: 1em auto 1em auto; width:70%; padding:2em; page-break-inside: avoid;}
    #attribution {page-break-inside: avoid;}
    #attribution ul {list-style:none;}
    .guide_taxon {margin-bottom:2em;}
    .guide_photos {text-align: center;}
    .guide_photos img {display:inline-block; margin: 0 0.5em 0.5em 0;}
    @media print{@page {size: portrait}}
#titlepage.page
  #title.text-center
    - if @guide.icon.file?
      = image_tag @guide.icon.url(:medium)
    %h1= @guide.title
    %p.muted
      =t :guide_compiled_by
      - if @guide.license.blank?
        = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
      - else
        = succeed ',' do
          = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
        =t 'copyright.some_rights_reserved'
        = surround '(', ')' do
          = @guide.license.sub('-', ' ')
  - unless @guide.description.blank?
    #abstract
      = separator
      = formatted_user_text @guide.description
      = separator
.container-fluid
  - for gt in @guide_taxa
    .guide_taxon
      .guide_taxon_header
        %h2= gt.display_name
        - unless gt.guide_photos.blank?
          .row-fluid.stacked
            .guide_photos
              .stacked
                = gt.guide_photos.sort_by(&:position).map{|p| image_tag(p.medium_url, :class => "thumb")}.join('').html_safe
              %p.attribution
                %small.muted.meta
                  = gt.guide_photos.size == 1 ? t(:photo) : t(:photos)
                  = gt.guide_photos.sort_by(&:position).map(&:attribution).join(', ')
      .row-fluid
        .span9
          .guide_sections
            - for s in gt.guide_sections.sort_by(&:position)
              .guide_section
                %h3
                  = s.title
                  = cite do
                    = s.attribution
                    = link_to(s.source_url, s.source_url) unless s.source_url.blank?
                = formatted_user_text s.description
        .span3
          - gt.guide_ranges.sort_by(&:position).each do |gr|
            .guide_range.stacked.text-center
              = image_tag gr.medium_url, :class => "stacked"
              %p.attribution
                %small.muted.meta
                  =t :map
                  = gr.attribution
  #attribution
    %h3=t :sources_and_credits
    = references(:linked => true)
    %p
      - if @guide.license.blank?
        =t :compiled_by_name, :name => @guide.user.name.blank? ? @guide.user.login : @guide.user.name
      - else
        = succeed ',' do
          =t :compiled_by_name, :name => @guide.user.name.blank? ? @guide.user.login : @guide.user.name
        =t 'copyright.some_rights_reserved'
        = surround '(', ')' do
          = link_to @guide.license.sub('-', ' '), url_for_license(@guide.license)
    %p
      =t :built_with_site_guides_html, :site_name => SITE_NAME, :url => guides_url
