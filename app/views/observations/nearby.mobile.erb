<%- @user_scalable = 0 -%>
<%- content_for(:title) do -%>
  <%= @pagetitle = t(:nearby_observations) %>
<%- end -%>
<%- content_for(:extracss) do -%>
  <%#= stylesheet_link_tag "observations" %>
  <style type="text/css" media="screen">
    .observations { list-style: none; padding: 0;}
    .observations.mini .user .label,
    .observations.mini .observed_on .label,
    .observations.mini .created_at .label,
    .observations.mini .place .label {
      font-size: 75%;
    }
    .observations.infowindow .details {display:none !important;}
    .left_bottom_control {width:95px; text-align: left;}
    
    #map {
      height: 325px;
    }
    
    #mapcontainer { position: relative; }
  </style>
<%- end -%>

<%- content_for(:extrajs) do -%>
  <%= google_maps_js :sensor => true %>
  <%= javascript_include_tag 'map_bundle' %>
  <script type="text/javascript" charset="utf-8">
    $(document).ready(function() {
      // Setup gmap
      window.map = iNaturalist.Map.createMap({controls: false, observationsTileServer: '<%= OBSERVATIONS_TILE_SERVER %>'});
      map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(new NearMeControl(map));
      map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(new SearchMapControl(map));
      
      // Get location from device
      if (typeof(navigator.geolocation) != "undefined") {
        navigator.geolocation.getCurrentPosition(getCurrentPositionSuccess, getCurrentPositionFailure);
      } else {
        getCurrentPositionFailure();
      }
      $('.tabs').tabs()
    })
    
    function getCurrentPositionSuccess(location) {
      window.scrollTo(0, $('.tabs').offset().top - 5);
      getObs('<%= observations_path(:format => "json", :partial => "cached_component", :q => "") %>'+
        '&lat='+location.coords.latitude+'&lng='+location.coords.longitude, {
          lat: location.coords.latitude,
          lon: location.coords.longitude
        })
    }
    
    function getCurrentPositionFailure() {
      <% if @lat && @lon %>
        getObs('<%= observations_path(:format => "json", :partial => "cached_component", :q => "", :lat => @lat, :lng => @lon) %>', {
          lat: <%= @lat %>, lon: <%= @lon %>
        });
      <% else %>
        getObs('<%= observations_path(:format => "json", :partial => "cached_component") %>');
      <% end %>
    }
    
    
    
    function getObs(url, options) {
      var options = $.extend({}, options);
      
      $('#map').loadingShades()
      window.map.removeObservations();
      
      $.ajax({
        url: url,
        method: 'get',
        dataType: 'json',
        success: function(data, status) {
          var html = "";
          var observations = []
          $.each(data, function() {
            html += this.html;
            this.instance.taxon = this.extra.taxon;
            this.instance.iconic_taxon = this.extra.iconic_taxon;
            this.instance.user = this.extra.user;
            observations.push(this.instance);
          });
          $('#observations').html(html);
          $('#observations .details').show();
          window.map.addObservations(observations);
          
          if (options.lat && options.lon) {
            var centerPt = new google.maps.LatLng(options.lat, options.lon);
            var bounds = map.getObservationBounds();
            bounds.extend(centerPt);
            map.fitBounds(bounds)
            if (window.centerMarker) {
              window.centerMarker.setPosition(centerPt);
            } else {
              window.centerMarker = window.map.createMarker(options.lat, options.lon, {
                icon: iNaturalist.Map.createPlaceIcon()
              });
              window.centerMarker.setMap(window.map)
            }
          }
          $('#map').shades('close')
        },
        error: function(request, status, error) {
          $('#noobservations').show();
          $('#observations .loading').hide();
        }
      })
    }
    
    var NearMeControl = function(map) {
      var controlDiv = document.createElement('DIV')
      controlDiv.style.padding = '5px';
      var controlUI = $('<div><span class="inlineblock ui-icon ui-icon-pin-s"></span> Near me</div>').addClass('gmapv3control overlaycontrol left_bottom_control')
      controlUI.click(function() {
        $('#map').loadingShades()
        navigator.geolocation.getCurrentPosition(getCurrentPositionSuccess, getCurrentPositionFailure)
      })
      controlDiv.appendChild(controlUI.get(0))
      this.div = controlDiv
      this.map = map
      return controlDiv
    }

    var SearchMapControl = function(map) {
      var controlDiv = document.createElement('DIV')
      controlDiv.style.padding = '5px';
      var controlUI = $('<div><span class="inlineblock ui-icon ui-icon-refresh"></span> Search map</div>').addClass('gmapv3control overlaycontrol left_bottom_control')
      controlUI.click(function() {
        $('#map').loadingShades()
        var center = window.map.getCenter(),
            sw = map.getBounds().getSouthWest(),
            ne = map.getBounds().getNorthEast(),
            url = '/observations.json?partial=cached_component&q=""&swlat='+sw.lat()+'&swlng='+sw.lng()+'&nelat='+ne.lat()+'&nelng='+ne.lng()
        getObs(url)
      })
      controlDiv.appendChild(controlUI.get(0))
      this.div = controlDiv
      this.map = map
      return controlDiv
    }
  </script>
<%- end -%>

<div class="tabs">
  <ul>
    <li><a href="#mapcontainer"><span>Nearby observations map</span></a></li>
    <li><a href="#observations"><span>List</span></a></li>
  </ul>

  <div id="mapcontainer">
    <div id="map"></div>
  </div>

  <div id="observations" class="mini observations">
    <div class="loading status">
      <%=t :loading %>
    </div>
    <div id="noobservations" class="meta" style="display: none"><%=t :no_nearby_observations %></div>
  </div>
</div>
